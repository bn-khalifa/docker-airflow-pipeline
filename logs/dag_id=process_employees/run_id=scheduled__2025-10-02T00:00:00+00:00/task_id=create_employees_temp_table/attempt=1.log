{"timestamp":"2025-10-02T16:03:18.947010Z","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager","filename":"manager.py","lineno":179}
{"timestamp":"2025-10-02T16:03:18.948172Z","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/sql_dag.py","logger":"airflow.models.dagbag.DagBag","filename":"dagbag.py","lineno":593}
{"timestamp":"2025-10-02T16:03:19.364012Z","level":"info","event":"Task instance is in running state","logger":"task.stdout"}
{"timestamp":"2025-10-02T16:03:19.366099Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","logger":"task.stdout"}
{"timestamp":"2025-10-02T16:03:19.366681Z","level":"info","event":"Current task name:create_employees_temp_table","logger":"task.stdout"}
{"timestamp":"2025-10-02T16:03:19.366991Z","level":"info","event":"Dag name:process_employees","logger":"task.stdout"}
{"timestamp":"2025-10-02T16:03:19.365307Z","level":"info","event":"Executing: \n            DROP TABLE IF EXISTS employees_temp;\n            CREATE TABLE employees_temp (\n                \"Serial Number\" NUMERIC PRIMARY KEY,\n                \"Company Name\" TEXT,\n                \"Employee Markme\" TEXT,\n                \"Description\" TEXT,\n                \"Leave\" INTEGER\n            );","logger":"airflow.task.operators.airflow.providers.common.sql.operators.sql.SQLExecuteQueryOperator","filename":"sql.py","lineno":309}
{"timestamp":"2025-10-02T16:03:19.422166Z","level":"info","event":"Running statement: \n            DROP TABLE IF EXISTS employees_temp;\n            CREATE TABLE employees_temp (\n                \"Serial Number\" NUMERIC PRIMARY KEY,\n                \"Company Name\" TEXT,\n                \"Employee Markme\" TEXT,\n                \"Description\" TEXT,\n                \"Leave\" INTEGER\n            );, parameters: None","logger":"airflow.task.hooks.airflow.providers.postgres.hooks.postgres.PostgresHook","filename":"sql.py","lineno":810}
{"timestamp":"2025-10-02T16:03:19.500937Z","level":"info","event":"Task instance in success state","logger":"task.stdout"}
{"timestamp":"2025-10-02T16:03:19.501541Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","logger":"task.stdout"}
{"timestamp":"2025-10-02T16:03:19.502098Z","level":"info","event":"Task operator:<Task(SQLExecuteQueryOperator): create_employees_temp_table>","logger":"task.stdout"}
