{"timestamp":"2025-10-04T02:22:59.083727Z","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager","filename":"manager.py","lineno":179}
{"timestamp":"2025-10-04T02:22:59.106145Z","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/sql_dag.py","logger":"airflow.models.dagbag.DagBag","filename":"dagbag.py","lineno":593}
{"timestamp":"2025-10-04T02:23:00.348600Z","level":"info","event":"Task instance is in running state","logger":"task.stdout"}
{"timestamp":"2025-10-04T02:23:00.351769Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","logger":"task.stdout"}
{"timestamp":"2025-10-04T02:23:00.353951Z","level":"info","event":"Current task name:create_employees_table","logger":"task.stdout"}
{"timestamp":"2025-10-04T02:23:00.359675Z","level":"info","event":"Dag name:process_employees","logger":"task.stdout"}
{"timestamp":"2025-10-04T02:23:00.349011Z","level":"info","event":"Executing: \n            CREATE TABLE IF NOT EXISTS employees (\n                \"Serial Number\" NUMERIC PRIMARY KEY,\n                \"Company Name\" TEXT,\n                \"Employee Markme\" TEXT,\n                \"Description\" TEXT,\n                \"Leave\" INTEGER\n            );","logger":"airflow.task.operators.airflow.providers.common.sql.operators.sql.SQLExecuteQueryOperator","filename":"sql.py","lineno":309}
{"timestamp":"2025-10-04T02:23:00.444263Z","level":"info","event":"Running statement: \n            CREATE TABLE IF NOT EXISTS employees (\n                \"Serial Number\" NUMERIC PRIMARY KEY,\n                \"Company Name\" TEXT,\n                \"Employee Markme\" TEXT,\n                \"Description\" TEXT,\n                \"Leave\" INTEGER\n            );, parameters: None","logger":"airflow.task.hooks.airflow.providers.postgres.hooks.postgres.PostgresHook","filename":"sql.py","lineno":810}
{"timestamp":"2025-10-04T02:23:00.537141Z","level":"info","event":"Task instance in success state","logger":"task.stdout"}
{"timestamp":"2025-10-04T02:23:00.549063Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","logger":"task.stdout"}
{"timestamp":"2025-10-04T02:23:00.555632Z","level":"info","event":"Task operator:<Task(SQLExecuteQueryOperator): create_employees_table>","logger":"task.stdout"}
